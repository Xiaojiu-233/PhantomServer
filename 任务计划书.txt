requestbody实现  √
requestparam实现  √
别忘了byte数据回收！！！  √
完成依赖注入，添加autowired和notInject  √
multipartFile实现：
	单文件  √，多文件  √
	单文本  √，多文本  √
	同一key多文本  √，同一key多文件  √，同一key文件夹杂文本  √
html能否附带js、css下载  √
http协议时会有两个线程进行，有一个不会回收  √
上传大量内容导致读取跟不上，会有数据丢失  √
正式使用socketChannel  √
减少不必要的线程触发（尤其是http产生的第二个请求）  √
http插入获取cookie  √
IOC容器对指定的包内容进行解析反射，避开某些无用的包内其他包程序被解析  √
开始TCP长短连接的处理器开发  √
聊天app需要开发 网络请求 和 消息渲染 的功能  √
需要解决 服务器读空数据 问题  √
需要解决 服务器和客户端数据缓存积压 问题  √
登录过滤器  √
拓展工具包整理与javadoc实现  √
线程回收智能算法
UDP流媒体连接（直播）的处理器开发（作为拓展包）

客户端问题：
客户端重新进入界面会再次连接（解决方法：每次要开启连接时断开连接） √
客户端发送一个消息会返回三次（上面一样的问题，因为线程多了导致重复发送） √
客户端输入消息时，输入法应该把聊天框顶到最底下 √
客户端刷新频率太慢  √
客户端连接不稳定  √
图片传输总是卡在5000字节左右，传不出去很奇怪  √
客户端重新进入聊天时把消息记录也同步过来  √

思考：
1.如果一个socket处理时卡死，导致其他的socket无法处理，怎么办，模拟+思考解决方案
    答：SelectorChannel添加全新的阶段，用于处理HTTP的CPU任务，防止运行时卡死
2.是否可以好好利用channel可读属性，等待可读之后再读取数据？
    答：可以，当读取到一个字节的内容时，开启读取线程任务，将读取到的字节一并存入线程任务中用于拼接成完整数据
3.关于javadoc的问题，或者考虑打包jar的时候保留注释代码
4.工作线程的其他回收方式？（论文里面讲的数学方法可否考虑）
5.长连接单次拉取数据时出现两个请求包前后相连的问题，该如何解决？
	答：将读取到的消息先存入缓存，然后根据分隔符进行请求单元的拆分，之后再将请求单元依次处理
6.是否可以考虑HTTP请求过滤器

定义：
服务器分为物理服务器和应用服务器，市面上售卖的是物理服务器，让服务器提供各种服务的是应用服务器，比如web服务器、数据库服务器、邮件服务器，我做的就是提供功能的应用服务器
差异点：多功能（HTTP、TCP）、拓展协议处理（用户可以自己编程添加网络处理来进行功能拓展）、NIO+高并发分段式 IO处理框架（可以在论文里细说）、可视化界面（实时监控与修改配置）、独特的线程管理算法
